#!/bin/bash
. ./ADDRESS

UPLOAD_API_KEY=$1
PRIVATE_KEYS_LOCATION=$2

VERSION_FILENAME="release_notes.txt"

rm -rf /tmp/hypersomnia-deployment
mkdir  /tmp/hypersomnia-deployment
pushd  /tmp/hypersomnia-deployment

APPVEYOR_PATH="https://ci.appveyor.com/api/projects/geneotech/Hypersomnia/artifacts"
WORKFLOWS_PATH="https://nightly.link/TeamHypersomnia/Hypersomnia/workflows"

download_from_appveyor() {
	local PLATFORM="Windows"

	mkdir binaries-$PLATFORM
	pushd binaries-$PLATFORM
	wget "$APPVEYOR_PATH/Hypersomnia-for-$PLATFORM.exe"
	wget "$APPVEYOR_PATH/Hypersomnia-for-$PLATFORM.zip"
	wget "$APPVEYOR_PATH/$VERSION_FILENAME"
	dos2unix $VERSION_FILENAME
	popd
}

download_from_github_actions() {
	local PLATFORM=$1
	local PLATFORM_PATH="$WORKFLOWS_PATH/${PLATFORM}_build/master/binaries.zip"

	wget $PLATFORM_PATH

	unzip binaries.zip -d binaries-$PLATFORM
	pushd binaries-$PLATFORM/
	mv hypersomnia/$VERSION_FILENAME ./
	rmdir hypersomnia
	popd
	rm binaries.zip
}

sign_platform_file() {
	local PLATFORM=$1
	local FILE_PATH=$2
	local PRIVATE_KEY=$PRIVATE_KEYS_LOCATION/private-$PLATFORM.pem

	local SIGNATURE_BIN_PATH="$FILE_PATH.signature"
	SIGNATURE_TXT_PATH="$SIGNATURE_BIN_PATH.txt"

	openssl dgst -sha256 -sign $PRIVATE_KEY -out $SIGNATURE_BIN_PATH $FILE_PATH
	openssl enc -base64 -in $SIGNATURE_BIN_PATH -out $SIGNATURE_TXT_PATH
}

read_version() {
	local PLATFORM=$1

	local VERSION_PATH="binaries-$PLATFORM/$VERSION_FILENAME"
	VERSION=$(head -n 1 $VERSION_PATH)
}

print_version() {
	read_version $1

	echo "$1 version: $VERSION"
}

sign_and_upload() {
	local UPLOAD_URL="$DOWNLOADS_HOST/upload_artifact.php"

	local PLATFORM=$1
	local EXTENSION=$2
	local ARTIFACT_TYPE=$3

	local FOLDER="binaries-$PLATFORM"
	local FILE_PATH="$FOLDER/Hypersomnia-for-$PLATFORM.$EXTENSION"

	sign_platform_file $PLATFORM $FILE_PATH

	local SIGNATURE_LOCATION=$SIGNATURE_TXT_PATH

	read_version $PLATFORM

	curl -F "key=$UPLOAD_API_KEY" -F "platform=$PLATFORM" -F "version=$VERSION" -F "artifact=@$FILE_PATH" -F "artifact_type=$ARTIFACT_TYPE" -F "signature=@$SIGNATURE_LOCATION" $UPLOAD_URL
}

download_from_appveyor
download_from_github_actions Linux
download_from_github_actions MacOS

print_version Windows
print_version Linux
print_version MacOS

read_version Linux
REFERENCE_VERSION=$VERSION

read -p "Latest version will be set to $REFERENCE_VERSION. Proceed with signing? (Yy/Nn) " -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
	echo "Exiting without signing."
	exit 1
fi

echo "Signing and uploading."

sign_and_upload Windows exe "updater"
sign_and_upload Windows zip "release"
sign_and_upload Linux sfx "updater"
sign_and_upload Linux tar.gz "release"
sign_and_upload MacOS app.sfx "updater"
sign_and_upload MacOS dmg "release"

popd
